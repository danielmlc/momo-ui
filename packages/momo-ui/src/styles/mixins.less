// Momo UI 混合器系统 - 基于新拟物化设计原则

// ================================
// 核心新拟物化混合器
// ================================

// 基础新拟物化样式
.neumorphism-base() {
  background: @color-bg-primary;
  border: none;
  outline: none;
  position: relative;
  transition: @transition-button;
  font-family: @font-family-base;
}

// 按钮新拟物化效果 - 默认状态
.neumorphism-button-default(@radius: @button-radius-md) {
  .neumorphism-base();
  border-radius: @radius;
  box-shadow: @shadow-button-default;
  transform: translateY(0);
}

// 按钮悬浮状态
.neumorphism-button-hover() {
  box-shadow: @shadow-button-hover;
  transform: translateY(-1px);
}

// 按钮按下状态
.neumorphism-button-pressed() {
  box-shadow: @shadow-button-pressed;
  transform: translateY(0);
}

// 按钮禁用状态
.neumorphism-button-disabled() {
  box-shadow: @shadow-button-disabled;
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
  pointer-events: none;
}

// ================================
// 按钮样式混合器
// ================================

// 按钮基础样式
.button-base() {
  .neumorphism-button-default();
  
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: @spacing-sm;
  text-align: center;
  text-decoration: none;
  user-select: none;
  cursor: pointer;
  font-weight: @button-font-weight;
  line-height: @button-line-height;
  white-space: nowrap;
  vertical-align: middle;
  
  // 状态切换
  &:hover:not(:disabled):not(.disabled) {
    .neumorphism-button-hover();
  }
  
  &:active:not(:disabled):not(.disabled) {
    .neumorphism-button-pressed();
  }
  
  &:disabled,
  &.disabled {
    .neumorphism-button-disabled();
  }
  
  // 焦点状态
  &:focus-visible {
    outline: 2px solid fade(@color-primary, 50%);
    outline-offset: 2px;
  }
}

// 按钮尺寸混合器
.button-size(@size) {
  & when (@size = small) {
    height: @button-height-sm;
    padding: @button-padding-sm;
    font-size: @button-font-size-sm;
    border-radius: @button-radius-sm;
    min-width: @button-min-width-sm;
  }
  
  & when (@size = medium) {
    height: @button-height-md;
    padding: @button-padding-md;
    font-size: @button-font-size-md;
    border-radius: @button-radius-md;
    min-width: @button-min-width-md;
  }
  
  & when (@size = large) {
    height: @button-height-lg;
    padding: @button-padding-lg;
    font-size: @button-font-size-lg;
    border-radius: @button-radius-lg;
    min-width: @button-min-width-lg;
  }
}

// 填充按钮样式
.button-filled(@color) {
  background: @color;
  color: @color-text-inverse;
  
  &:hover:not(:disabled):not(.disabled) {
    background: darken(@color, 5%);
  }
  
  &:active:not(:disabled):not(.disabled) {
    background: darken(@color, 10%);
  }
}

// 文本按钮样式
.button-text(@color) {
  background: transparent;
  color: @color;
  box-shadow: none;
  
  &:hover:not(:disabled):not(.disabled) {
    background: fade(@color, 8%);
    box-shadow: none;
    transform: none;
  }
  
  &:active:not(:disabled):not(.disabled) {
    background: fade(@color, 12%);
    box-shadow: none;
    transform: none;
  }
  
  &:disabled,
  &.disabled {
    background: transparent;
    box-shadow: none;
    color: @color-text-disabled;
  }
}

// 圆形按钮（图标按钮）
.button-circle(@size) {
  & when (@size = small) {
    width: @button-height-sm;
    height: @button-height-sm;
    border-radius: @radius-full;
    padding: 0;
    min-width: auto;
  }
  
  & when (@size = medium) {
    width: @button-height-md;
    height: @button-height-md;
    border-radius: @radius-full;
    padding: 0;
    min-width: auto;
  }
  
  & when (@size = large) {
    width: @button-height-lg;
    height: @button-height-lg;
    border-radius: @radius-full;
    padding: 0;
    min-width: auto;
  }
}

// 浮动操作按钮
.button-floating() {
  width: 56px;
  height: 56px;
  border-radius: @radius-full;
  padding: 0;
  min-width: auto;
  box-shadow: @shadow-floating;
  position: fixed;
  
  &:hover:not(:disabled):not(.disabled) {
    box-shadow: @shadow-floating, @shadow-button-hover;
    transform: translateY(-2px);
  }
}

// ================================
// 布局混合器
// ================================

// Flexbox 居中
.flex-center() {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Flexbox 对齐
.flex-align(@align: center, @justify: flex-start) {
  display: flex;
  align-items: @align;
  justify-content: @justify;
}

// 绝对居中
.absolute-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 尺寸设置
.size(@width, @height: @width) {
  width: @width;
  height: @height;
}

// ================================
// 文本混合器
// ================================

// 文本省略
.text-ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 多行文本省略
.text-ellipsis-multi(@lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: @lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  word-break: break-word;
}

// 文本阴影
.text-shadow-subtle() {
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

// ================================
// 实用混合器
// ================================

// 隐藏元素但保持可访问性
.visually-hidden() {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// 清除浮动
.clearfix() {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// 自定义滚动条
.custom-scrollbar(@width: 6px, @track-color: transparent, @thumb-color: @color-gray-300) {
  &::-webkit-scrollbar {
    width: @width;
    height: @width;
  }
  
  &::-webkit-scrollbar-track {
    background: @track-color;
    border-radius: @width / 2;
  }
  
  &::-webkit-scrollbar-thumb {
    background: @thumb-color;
    border-radius: @width / 2;
    
    &:hover {
      background: darken(@thumb-color, 10%);
    }
  }
  
  // Firefox  
  & {
    scrollbar-width: thin;
    scrollbar-color: @thumb-color @track-color;
  }
}

// 隐藏滚动条
.hide-scrollbar() {
  -ms-overflow-style: none;
  scrollbar-width: none;
  
  &::-webkit-scrollbar {
    display: none;
  }
}

// ================================
// 响应式混合器
// ================================

// 媒体查询混合器
.media-min(@breakpoint) {
  @media (min-width: @breakpoint) {
    @content();
  }
}

.media-max(@breakpoint) {
  @media (max-width: (@breakpoint - 1px)) {
    @content();
  }
}

.media-between(@min-breakpoint, @max-breakpoint) {
  @media (min-width: @min-breakpoint) and (max-width: (@max-breakpoint - 1px)) {
    @content();
  }
}